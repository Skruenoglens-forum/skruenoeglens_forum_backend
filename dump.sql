DROP DATABASE IF EXISTS skruenoeglen;

CREATE DATABASE skruenoeglen;

USE skruenoeglen;

DROP TABLE IF EXISTS role;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS car;
DROP TABLE IF EXISTS post;

CREATE TABLE role (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(128) NOT NULL
);

INSERT INTO role (name) VALUES 
('Admin'),
('User');

CREATE TABLE users (
    id BIGINT(20) PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(128) NOT NULL,
    email VARCHAR(128) NOT NULL UNIQUE,
    password LONGTEXT NOT NULL,
    role_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    FOREIGN KEY (role_id) REFERENCES role(id)
);

CREATE TABLE car (
    id INT PRIMARY KEY AUTO_INCREMENT,
    users_id BIGINT(20) NOT NULL,
    brand VARCHAR(128) NOT NULL,
    model VARCHAR(128) NOT NULL,
    motor VARCHAR(128) NOT NULL,
    type VARCHAR(128) NOT NULL,
    year VARCHAR(128) NOT NULL,
    license_plage VARCHAR(128) NOT NULL,
    vin VARCHAR(128) NOT NULL,
    first_registration datetime NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    FOREIGN KEY (users_id) REFERENCES users(id)
);

CREATE TABLE post (
    id BIGINT(20) PRIMARY KEY AUTO_INCREMENT,
    users_id BIGINT(20) NOT NULL,
    title VARCHAR(128) NOT NULL,
    description VARCHAR(128) NOT NULL,
    parent_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    FOREIGN KEY (users_id) REFERENCES users(id)
);